classDiagram
    class MainActivity {
        -viewModel: MainViewModel
        +onCreate()
        +onRequestPermissionsResult()
        +onActivityResult()
    }

    class MainViewModel {
        -repository: ContentRepository
        -arEngine: AREngine
        -mediaManager: MediaManager
        +startCreation()
        +processMediaContent(media: Uri)
        +generateQRCode(content: ARContent)
        +loadARContent(id: String)
    }

    class AREngine {
        -easyAREngine: EasyAR
        -trackingConfig: TrackingConfig
        +initialize(context: Context)
        +startTracking()
        +stopTracking()
        +loadTarget(image: Bitmap)
        +renderContent(content: ARContent)
    }

    class MediaManager {
        -cameraProvider: ProcessCameraProvider
        -imageCapture: ImageCapture
        -videoCapture: VideoCapture
        +startCamera(lifecycleOwner: LifecycleOwner)
        +captureImage(): Flow<Uri>
        +recordVideo(): Flow<Uri>
        +processMedia(uri: Uri): Flow<ProcessedMedia>
    }

    class ContentRepository {
        -database: RoomDatabase
        -cloudStorage: FirebaseStorage
        -qrSystem: QRSystem
        +saveContent(content: ARContent): Flow<String>
        +loadContent(id: String): Flow<ARContent>
        +shareContent(content: ARContent): Flow<String>
        +deleteContent(id: String): Flow<Unit>
    }

    class QRSystem {
        -mlKitScanner: BarcodeScanner
        -qrGenerator: QRCodeGenerator
        +generateQR(content: String): Flow<Bitmap>
        +scanQR(image: Bitmap): Flow<String>
    }

    class ARContent {
        +id: String
        +targetImage: ByteArray
        +overlayContent: ByteArray
        +contentType: ContentType
        +metadata: ContentMetadata
    }

    class ContentMetadata {
        +creationDate: Date
        +expiryDate: Date
        +size: Long
        +duration: Int
    }

    class ProcessedMedia {
        +uri: Uri
        +type: MediaType
        +size: Long
        +duration: Int
    }

    enum ContentType {
        IMAGE
        VIDEO
        ANIMATION
    }

    enum MediaType {
        TARGET_IMAGE
        OVERLAY_IMAGE
        OVERLAY_VIDEO
    }

    MainActivity --> MainViewModel
    MainViewModel --> AREngine
    MainViewModel --> MediaManager
    MainViewModel --> ContentRepository
    ContentRepository --> QRSystem
    ContentRepository ..> ARContent
    ARContent --> ContentMetadata
    MediaManager ..> ProcessedMedia